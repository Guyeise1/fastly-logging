name: Create Release
on:
  push:
    branches:
      - main
jobs:
  extract_version:
    runs-on: ubuntu-latest
    name: Extract Version
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Get package version
        id: version
        run: echo "value=$(node -p -e "require('./package.json').version")" >> "$GITHUB_OUTPUT"
  create_release:
    runs-on: ubuntu-latest
    needs: extract_version
    name: Create Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        uses: actions/github-script@v4
        with:
          script: |
            const { context, GitHub } = require("@actions/github");

            const octokit = new GitHub(process.env.GITHUB_TOKEN);
            const { owner, repo } = context.repo;

            const version = "v" + process.env.VERSION;
            console.log("version", version);

            const createReleaseResponse = await octokit.repos.createRelease({
              owner,
              repo,
              tag_name: version,
              name: `Release ${version}`,
              draft: false,
              prerelease: false
            });

            console.log(`Created release ${createReleaseResponse.data.html_url}`);
          env:
            VERSION: "${{ needs.extract_version.outputs.version }}"
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
